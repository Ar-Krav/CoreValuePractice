<!--
 - Created by Ar-Krav on 24.01.2018.
 -->

<apex:page controller="DevicePageController" standardStylesheets="false">

    <head>
        <apex:includescript value="//code.jquery.com/jquery-1.11.1.min.js"/>
        <link rel="stylesheet" type="text/css"
              href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css"/>

        <script type="text/javascript" charset="utf8"
                src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.js"></script>


        <apex:includeScript value="{!$Resource.devicePageJS}"/>
        <link rel="stylesheet" type="text/css" href="{!$Resource.devicePageStyle}"/>
    </head>

    <script>
        function redrawDeviceDataTable(){
            return $('#devices-table').DataTable( {
                "paging":   false,
                "info":     false
            } );
        }

        var deviceTable;

        $(document).ready(function() {
            deviceTable = redrawDeviceDataTable();
            configTable = redrawConfigurationDataTable();
            pageButtonClick();
        } );

        var configTable;

        function redrawConfigurationDataTable() {
            return $('#configuration-table').DataTable( {
                        "paging":   false,
                        "info":     false
                    } );
        }
    </script>

    <style>
        .paginate-button.current{
            color:#333 !important;
            border:1px solid #979797;
            background-color:white;
            background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #fff), color-stop(100%, #dcdcdc));
            background:-webkit-linear-gradient(top, #fff 0%, #dcdcdc 100%);background:-moz-linear-gradient(top, #fff 0%, #dcdcdc 100%);
            background:-ms-linear-gradient(top, #fff 0%, #dcdcdc 100%);background:-o-linear-gradient(top, #fff 0%, #dcdcdc 100%);
            background:linear-gradient(to bottom, #fff 0%, #dcdcdc 100%)
        }

        .paginate-button.current:hover{
            color:#333 !important;
            border:1px solid #979797;
            background-color:white;
            background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #fff), color-stop(100%, #dcdcdc));
            background:-webkit-linear-gradient(top, #fff 0%, #dcdcdc 100%);
            background:-moz-linear-gradient(top, #fff 0%, #dcdcdc 100%);
            background:-ms-linear-gradient(top, #fff 0%, #dcdcdc 100%);
            background:-o-linear-gradient(top, #fff 0%, #dcdcdc 100%);
            background:linear-gradient(to bottom, #fff 0%, #dcdcdc 100%) !important;
        }

        .paginate-button{
            box-sizing: border-box;
            display: inline-block;
            min-width: 1.5em;
            padding: 0.5em 1em;
            margin-left: 2px;
            text-align: center;
            cursor: pointer;
            color: #333 !important;
            background-color: transparent;
            text-decoration: none !important;
            border: 1px solid transparent;
            border-radius: 2px;
        }

        .paginate-button:active{
            outline:none;
            background-color:#2b2b2b;
            background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #2b2b2b), color-stop(100%, #0c0c0c));
            background:-webkit-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);
            background:-moz-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);
            background:-ms-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);
            background:-o-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);
            background:linear-gradient(to bottom, #2b2b2b 0%, #0c0c0c 100%) !important;
            box-shadow:inset 0 0 3px #111;
        }

        .paginate-button:hover{
            color:white !important;
            border:1px solid #111;
            background-color:#585858;
            background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #585858), color-stop(100%, #111));
            background:-webkit-linear-gradient(top, #585858 0%, #111 100%);background:-moz-linear-gradient(top, #585858 0%, #111 100%);
            background:-ms-linear-gradient(top, #585858 0%, #111 100%);background:-o-linear-gradient(top, #585858 0%, #111 100%);
            background:linear-gradient(to bottom, #585858 0%, #111 100%)
        }

        .paginate-button.disabled,.paginate-button.disabled:hover,.paginate-button.disabled:active{
            cursor:default;
            color:#666 !important;
            border:1px solid transparent;
            background:transparent;
            box-shadow:none
        }
    </style>

    <script>
        function pageButtonClick() {
            var totalPages = {!totalPagesNum};
            var currentPage = {!devicePaginationController.pageNumber};

            var buttonsBlock = document.getElementById('page-buttons-block');
            var lastButtonBlock = document.getElementById('last-page-button-block');

            var htmlCode='';

            if (totalPages > 1 && totalPages <= 6){
                for(var i = 2; i <= totalPages; i++){
                    htmlCode += '<input type="button" class="paginate-button" data-page="' + i + '" value="' + i + '"/>\n';
                }

                buttonsBlock.innerHTML = htmlCode;
                return;
            }


            if (totalPages > 0){
                htmlCode = '<input type="button" class="paginate-button" data-page="' + totalPages + '" value="' + totalPages + '"/>';
                lastButtonBlock.innerHTML = htmlCode;
            }

            buttonsBlock.parentNode.removeChild(buttonsBlock);

            if (currentPage >= 5 && totalPages - currentPage > 5){
                htmlCode = '...';

                htmlCode += '<input type="button" class="paginate-button" data-page="' + (currentPage - 1) + '" value="' + (currentPage - 1) + '"/>';
                htmlCode += '<input type="button" class="paginate-button" data-page="' + currentPage + '" value="' + currentPage + '"/>';
                htmlCode += '<input type="button" class="paginate-button" data-page="' + (currentPage + 1) + '" value="' + (currentPage + 1) + '"/>';

                htmlCode += '...';

                buttonsBlock.innerHTML = htmlCode;
            }
        }
    </script>

    <apex:pageBlock>

        <apex:pageBlockButtons location="top">
            <apex:form >
                <apex:actionFunction name="changeLocation" action="{!sortDeviceByLocation}" rerender="device-list,configuration-info-block" status="deviceListReadyStatus">
                    <apex:param value="" name="selectedLocation"></apex:param>
                </apex:actionFunction>

                <apex:outputPanel id="city-selection-block" rendered="{!isShowLocationSelection}">
                    <apex:outputText style="color: #000;font-size: 1.2em;font-weight:bold;" value="Devices from:"/>

                    <select style="color: #000;font-size: 1.1em;" id="officeLocationsDropDown" onchange="sortDeviceByLocation()">
                            <option value="all-cities">All cities</option>
                            <apex:repeat value="{!adminsCities}" var="location">
                                <option value="{!location.id}">{!location.name}</option>
                            </apex:repeat>
                    </select>
                </apex:outputPanel>

            </apex:form>
        </apex:pageBlockButtons>

        <div id="main-box">
            <div id="device-block">
                <apex:form >
                    <apex:pageBlock title="Assemblies">

                        <apex:actionFunction action="{!setDeviceConfigurationListData}" name="showDeviceHardwareData" rerender="configuration-info-block,configuration-edit-button-block" status="configurationReadyStatus">
                            <apex:param name="deviceIdParameter" value="" />
                            <apex:param name="deviceImgUrl" value="" assignTo="{!deviceImageUrl}"/>
                        </apex:actionFunction>

                        <apex:actionFunction name="alertMonitorChanging" rerender="configuration-info-block,configuration-edit-button-block" action="{!alertMonitorChanging}" onComplete="alert('Only devices can be changed!');"/>

                        <apex:actionFunction action="{!setFilteredDeviceData}" name="searchWithFilter" rerender="device-list,configuration-info-block,configuration-edit-button-block" status="deviceListReadyStatus">
                            <apex:param name="deviceNameFilter" value="" assignTo="{!nameFilterValue}"/>
                            <apex:param name="deviceOwnerFilter" value="" assignTo="{!ownerFilterValue}"/>
                            <apex:param name="deviceSeriaFilter" value="" assignTo="{!seriaFilterValue}"/>
                            <apex:param name="deviceTypeFilter" value="" assignTo="{!typeFilterValue}"/>
                        </apex:actionFunction>

                        <apex:actionFunction name="previousPage" action="{!previous}"/>
                        <apex:actionFunction name="nextPage" action="{!next}"/>
                        <apex:actionFunction name="firstPage" action="{!first}"/>
                        <apex:actionFunction name="lastPage" action="{!last}"/>

                        <apex:outputPanel id="device-list">
                            <script>

                                if (deviceTable != null){
                                    deviceTable.destroy();
                                }

                                deviceTable = redrawDeviceDataTable();
                            </script>

                            <table id="devices-table" class="display" cellspacing="0">
                                <thead>
                                <tr>
                                    <th class="table-col-30"><apex:outputText value="{!$ObjectType.Hardware__c.Fields.Name.Label}"/></th>
                                    <th class="table-col-30"><apex:outputText value="{!$ObjectType.Hardware__c.Fields.AssignedToEmployee__c.Label}"/></th>
                                    <th class="table-col-25"><apex:outputText value="{!$ObjectType.Hardware__c.Fields.InvNo__c.Label}" /></th>
                                    <th class="table-col-20"><apex:outputText value="{!$Label.DeviceType}"/></th>
                                </tr>
                                </thead>

                                <tfoot>
                                <tr class="filters">
                                    <th class="table-col-30"><input class="filter-field" type="text" id="device-name-filter" value="{!nameFilterValue}" placeholder="{!$ObjectType.Hardware__c.Fields.Name.Label}" onkeypress="doDeviceFiltration(event)" /></th>
                                    <th class="table-col-30"><input class="filter-field" type="text" id="device-owner-filter" value="{!ownerFilterValue}" placeholder="{!$ObjectType.Hardware__c.Fields.AssignedToEmployee__c.Label}" onkeypress="doDeviceFiltration(event)" /></th>
                                    <th class="table-col-25"><input class="filter-field" type="text" id="device-seria-filter" value="{!seriaFilterValue}" placeholder="{!$ObjectType.Hardware__c.Fields.InvNo__c.Label}" onkeypress="doDeviceFiltration(event)" /></th>
                                    <th class="table-col-20"><input class="filter-field" type="text" id="device-type-filter" value="{!typeFilterValue}" placeholder="{!$Label.DeviceType}" onkeypress="doDeviceFiltration(event)" /></th>
                                </tr>
                                </tfoot>

                                <tbody>
                                <apex:repeat value="{!deviceList}" var="deviceUnit">
                                    <tr style="background-color: white;" onclick="selectRow(this, '{!deviceUnit.RecordType.name}', '{!deviceUnit.id}', '{!deviceUnit.ImageUrl__c}')">
                                        <td class="table-col-30" title="{!deviceUnit.name}">
                                            <p class="overlapping-text"><apex:outputText value="{!deviceUnit.name}" /></p>
                                        </td>

                                        <td class="table-col-30" title="{!deviceUnit.assignedToEmployee__r.name}">
                                            <p class="overlapping-text"><apex:outputText value="{!deviceUnit.assignedToEmployee__r.name}" /></p>
                                        </td>

                                        <td class="table-col-25" title="{!deviceUnit.InvNo__c}">
                                            <p class="overlapping-text"><apex:outputText value="{!deviceUnit.InvNo__c}" /></p>
                                        </td>

                                        <td class="table-col-20" title="{!deviceUnit.RecordType.name}">
                                            <p class="overlapping-text"><apex:outputText value="{!deviceUnit.RecordType.name}" /></p>
                                        </td>
                                    </tr>
                                </apex:repeat>
                                </tbody>
                            </table>

                            <br/>

                            <apex:panelGrid columns="6">
                                <input type="button" class="paginate-button {!IF(devicePaginationController.hasPrevious,'','disabled')}" disabled="{!!devicePaginationController.hasPrevious}" value="Previous"/>
                                <input type="button" class="paginate-button current" value="1"/>

                                <div id="page-buttons-block"></div>
                                <div id="last-page-button-block"></div>

<!--                                <apex:commandButton reRender="device-list,configuration-info-block" value="First" action="{!first}" disabled="{!!devicePaginationController.hasPrevious}" title="First Page"/>
                                <apex:commandButton reRender="device-list,configuration-info-block" value="Previous" action="{!previous}" disabled="{!!devicePaginationController.hasPrevious}" title="Previous Page"/>-->

                                <!--<a class="paginate-button current">{!devicePaginationController.pageNumber}</a>-->

                               <!-- <apex:commandButton reRender="device-list,configuration-info-block" value="Next" action="{!next}" disabled="{!!devicePaginationController.hasNext}" title="Next Page" />
                                <apex:commandButton reRender="device-list,configuration-info-block" value="Last" action="{!last}" disabled="{!!devicePaginationController.hasNext}" title="Last Page"/>-->

                                <input type="button" value="Next" class="paginate-button {!IF(devicePaginationController.hasNext,'','disabled')}" disabled="{!!devicePaginationController.hasNext}"/>
                                <apex:commandButton reRender="none" onClick="searchWithFilter('','','');" value="Reset filters" title="Reset filters"/>
                            </apex:panelGrid>

                        </apex:outputPanel>
                    </apex:pageBlock>
                </apex:form>
            </div>


            <div id="configuration-info">
                <apex:form>
                    <apex:outputPanel id="configuration-info-block">

                        <apex:pageBlock title="Configurations" >

                            <apex:pageBlockButtons location="top">
                                <apex:outputPanel id="configuration-edit-button-block">
                                    <apex:commandButton action="{!redirectToConfigurationEditorPage}" rendered="{!deviceConfigurationList != null}" value="Edit configuration"/>
                                </apex:outputPanel>
                            </apex:pageBlockButtons>

                            <apex:outputPanel rendered="{!deviceConfigurationList != null}">

                                <script>
                                    if ( configTable != null ) {
                                        configTable.destroy();
                                    }

                                    configTable = redrawConfigurationDataTable();
                                </script>

                                <table id="configuration-table" class="display dataTable no-footer">
                                    <thead>
                                        <tr>
                                            <th class="table-col-40"><apex:outputText value="{!$ObjectType.Hardware__c.Fields.Name.Label}"/></th>
                                            <th class="table-col-30"><apex:outputText value="{!$ObjectType.Hardware__c.Fields.InvNo__c.Label}" /></th>
                                            <th class="table-col-30"><apex:outputText value="{!$Label.DeviceType}"/></th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        <apex:repeat value="{!deviceConfigurationList}" var="hardwareUnit">
                                            <tr style="background-color: white;" class="table-row">
                                                <td class="table-col-40" title="{!hardwareUnit.name}"><p class="overlapping-text"><apex:outputText value="{!hardwareUnit.name}"/></p></td>
                                                <td class="table-col-30" title="{!hardwareUnit.InvNo__c}"><p class="overlapping-text"><apex:outputText value="{!hardwareUnit.InvNo__c}"/></p></td>
                                                <td class="table-col-30" title="{!hardwareUnit.RecordType.name}"><p class="overlapping-text"><apex:outputText value="{!hardwareUnit.RecordType.name}"/></p></td>
                                            </tr>
                                        </apex:repeat>
                                    </tbody>
                                </table>

                                <br/>
                                <br/>

                                <img src="{!deviceImageUrl}"/>

                            </apex:outputPanel>

                        </apex:pageBlock>

                    </apex:outputPanel>
                </apex:form>
            </div>
        </div>

    </apex:pageBlock>

</apex:page>